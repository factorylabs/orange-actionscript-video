package com.factorylabs.orange.unit.video{	import asunit.asserts.assertEquals;	import asunit.asserts.assertTrue;	import asunit4.async.addAsync;	import com.factorylabs.orange.video.FVideo;	/**	 * Generate the test cases for the FVideo class. 	 * 	 * <hr />	 * <p><a target="_top" href="http://github.com/factorylabs/orange-actionscript/MIT-LICENSE.txt">MIT LICENSE</a></p>	 * <p>Copyright (c) 2004-2010 <a target="_top" href="http://www.factorylabs.com/">Factory Design Labs</a></p>	 * 	 * <p>Permission is hereby granted to use, modify, and distribute this file 	 * in accordance with the terms of the license agreement accompanying it.</p> 	 *	 * @author		Grant Davis	 * @version		1.0.0 :: Mar 2, 2010	 */	public class FVideoStateTests 	{		protected static const HOST							:String = "172.20.34.110/vod/stream";		protected static const H264_1500k_MP4_RTMP_FILE		:String = "mp4:AdobeBand_1500K_H264";				private var _video		:FVideo;		private var _handler	:Function;				[Before]		public function runBeforeEachTest() :void		{			_video = new FVideo();		}				[After]		public function runAfterEachTest() :void		{			_video = null;		}				[Test]		public function constructor() :void		{			assertTrue( '_video is FVideo', _video is FVideo );		}				[Test(async)]		public function should_connect_and_set_connect_state() :void		{			_handler = addAsync( handleConnectState, 1000 );			_video.stateSignal.add( _handler );			_video.connect( HOST );		}		protected function handleConnectState( $state : String ) :void		{			assertEquals( FVideo.STATE_CONNECTING, $state );			_video.stateSignal.remove( _handler );		}			}}